const False = 0
const True = 1

const RMAX = 2
const FMAX = 4

range Bool = False..True
range R = 1..RMAX
range F = 1..FMAX

FLIGHT = ( request.runway -> WAIT ),
WAIT   = ( free.runway[i:R] -> take.off.done[i] -> FLIGHT ).

CONTROL = CONTROL[True][True],
CONTROL[free_1: Bool][free_2: Bool] = (
	 when(free_1) free.runway[1] -> CONTROL[False][free_2]
 	|when(free_2) free.runway[2] -> CONTROL[free_1][False]
 	|take.off.done[1] -> CONTROL[True][free_2]
 	|take.off.done[2] -> CONTROL[free_1][True]
).

||AIRPORT = ( f[F]:FLIGHT || f[F]::CONTROL ).

property MUTEX_1 = ( f[i:F].free.runway[1] -> f[i].take.off.done[1] -> MUTEX_1 ).
property MUTEX_2 = ( f[i:F].free.runway[2] -> f[i].take.off.done[2] -> MUTEX_2 ).

||AIRPORT_MUTEX = ( AIRPORT || MUTEX_1 || MUTEX_2 ).

// CONTROL_RUNWAY = CONTROL_RUNWAY[True],
// CONTROL_RUNWAY[free:Bool] = (
// 	 when(free) free.runway -> CONTROL_RUNWAY[False]
// 	|take.off.done -> CONTROL_RUNWAY[True]
// ).
// 
// ||CONTROL = ( r[R]:CONTROL_RUNWAY ).
// ||AIRPORT = ( f[F]:FLIGHT || f[F]::CONTROL )/{f[k:F].free.runway[i:R]/f[k].r[i].free.runway, f[k:F].take.off.done[i:R]/f[k].r[i].take.off.done}.

